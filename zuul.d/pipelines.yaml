---
- pipeline:
    name: check
    description: |
      Newly uploaded patchsets enter this pipeline to receive an
      initial +/-1 Verified vote.
    manager: independent
    trigger:
      github.com:
        - event: pull_request
          action:
            - opened
            - changed
            - reopened
        - event: pull_request
          action: comment
          comment: (?i)^\s*recheck\s*$
    start:
      github.com:
        status: "pending"
        status-url: "https://softwarefactory-project.io/zuul/t/packit-service/status/change/{change.number},{change.patchset}"
        comment: false
      mqtt:
        topic: "zuul/{pipeline}/start/{project}/{branch}"
    start-message: |
      Starting {pipeline.name} jobs. Status at {status_url}
    success:
      github.com:
        status: "success"
        status-url: "https://softwarefactory-project.io/zuul/t/packit-service/buildset/{buildset.uuid}"
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"
    failure:
      github.com:
        status: "failure"
        status-url: "https://softwarefactory-project.io/zuul/t/packit-service/buildset/{buildset.uuid}"
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"

- pipeline:
    name: gate
    description: |
      Changes that have been approved by core developers are enqueued
      in order in this pipeline, and if they pass tests, will be
      merged.
    success-message: Build succeeded (gate pipeline).
    failure-message: |
      Build failed (gate pipeline).
    manager: dependent
    precedence: high
    supercedes: check
    post-review: true
    require:
      github.com:
        review:
          # Require an approval from user with write access (e.g. core-reviewer)
          - permission: write
            type: approved
        # Require label
        label: mergeit
        status: "softwarefactory-project-zuul:packit-service/check:success"
        open: true
        current-patchset: true
    trigger:
      github.com:
        - event: pull_request_review
          action: submitted
          state: approved
        - event: pull_request
          action: comment
          comment: (?i)^\s*regate\s*$
        - event: pull_request_review
          action: submitted
          state: approved
        - event: pull_request_review
          action: dismissed
          state: request_changes
        - event: pull_request
          action: status
          status: "softwarefactory-project-zuul:packit-service/check:success"
        - event: pull_request
          action: status
          status: "softwarefactory-project-zuul\\[bot\\]:packit-service/check:success"
        - event: pull_request
          action: labeled
          label:
            - mergeit
    start:
      github.com:
        status: "pending"
        status-url: "https://softwarefactory-project.io/zuul/t/packit-service/status/change/{change.number},{change.patchset}"
        comment: false
      mqtt:
        topic: "zuul/{pipeline}/start/{project}/{branch}"
    success:
      github.com:
        status: "success"
        status-url: "https://softwarefactory-project.io/zuul/t/packit-service/buildset/{buildset.uuid}"
        merge: true
        comment: true
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"
    failure:
      github.com:
        status: "failure"
        status-url: "https://softwarefactory-project.io/zuul/t/packit-service/buildset/{buildset.uuid}"
        comment: true
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"
    window-floor: 20
    window-increase-factor: 2

- pipeline:
    name: post
    post-review: true
    description: This pipeline runs jobs that operate after each change is merged.
    manager: supercedent
    precedence: low
    trigger:
      github.com:
        - event: push
          ref: ^refs/heads/.*$
    start:
      mqtt:
        topic: "zuul/{pipeline}/start/{project}/{branch}"
    success:
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"
    failure:
      smtp:
        from: "zuul@softwarefactory-project.io"
        to: "root@localhost"
        subject: "[Zuul] Job failed in post pipeline: {change.project}"
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"

- pipeline:
    name: tag
    post-review: true
    description: This pipeline runs jobs when a tge git repo is tagged.
    manager: supercedent
    precedence: low
    trigger:
      github.com:
        - event: push
          ref: ^refs/tags/.*$
    failure:
      smtp:
        from: "zuul@fedora.softwarefactory-project.io"
        to: "root@localhost"
        subject: "[Zuul] Job failed in tag pipeline: {change.project}"

- pipeline:
    name: promote
    description: |
      This pipeline runs jobs that operate after each change is merged
      in order to promote artifacts generated in the gate
      pipeline.
    success-message: Build succeeded (promote pipeline).
    failure-message: |
      Build failed (promote pipeline).
    manager: supercedent
    precedence: high
    post-review: true
    require:
      github.com:
        merged: true
    trigger:
      github.com:
        - event: pull_request
          action: closed
    success:
      github.com:
        status: success
    failure:
      github.com:
        status: failure

- pipeline:
    name: periodic
    post-review: true
    description: Jobs in this queue are triggered daily.
    manager: independent
    precedence: low
    trigger:
      timer:
        - time: "0 0 * * *"
    start:
      mqtt:
        topic: "zuul/{pipeline}/start/{project}/{branch}"
    success:
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"
    failure:
      smtp:
        from: "zuul@softwarefactory-project.io"
        to: "root@localhost"
        subject: "[Zuul] Job failed in periodic pipeline: {change.project}"
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"

- pipeline:
    name: experimental
    description: >
      On-demand pipeline for requesting a run against a set of jobs that are not yet gating.
      Leave review comment of "check experimental" to run jobs in this pipeline.
    success-message: Build succeeded (experimental pipeline).
    failure-message: Build failed (experimental pipeline).
    manager: independent
    precedence: normal
    trigger:
      github.com:
        - event: pull_request
          action: comment
          comment: (?i)^\s*check experimental\s*$
    start:
      mqtt:
        topic: "zuul/{pipeline}/start/{project}/{branch}"
    success:
      github.com: {}
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"
    failure:
      github.com: {}
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"
